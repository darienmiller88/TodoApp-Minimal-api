@page
@model TodoApp.Pages.IndexModel

<div class="title">Todo List</div>
<form method="post">
    @Html.AntiForgeryToken()
    <input class="input-todo" asp-for="NewTodo.TodoName" minlength="5" maxlength="35" placeholder="Enter todo name"  type="text" required>
    <button class="add-todo" type="submit">Add Todo</button>
</form>
<div class="todos">
    @foreach (var todo in Model.todos){
        <div class="todo" id="@todo.Id">
        @if(todo.isComplete){
            <div class="todo-name strike-through">@todo.TodoName</div>
            <div class="delete-update-wrapper">
                <form asp-page-handler="Update" method="post">
                    <button class="undo base-button-stlying">Undo</button>
                </form>
                <form asp-page-handler="Delete" method="post">
                    <button class="delete-todo base-button-stlying">Delete</button>

                    @* This is how forms are able to send parameters to methods to the Handlers in the .cshtml.cs files *@
                    <input type="hidden" name="id" value="@todo.Id"/>
                </form>
            </div>
        }else{
            <div class="todo-name">@todo.TodoName</div>
            <div class="delete-update-wrapper">
                <form asp-page-handler="Update" method="post">
                    <button class="complete base-button-stlying">Complete</button>
                </form>
                <form asp-page-handler="Delete" method="post">
                    <button class="delete-todo base-button-stlying">Delete</button>

                    @* This is how forms are able to send parameters to methods to the Handlers in the .cshtml.cs files *@
                    <input type="hidden" name="id" value="@todo.Id"/>
                </form>
            </div>
        }
        </div>
    }
</div>